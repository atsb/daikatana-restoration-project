///////////////////////////////////////////////////////////////////////////////
//	Daikatana specific defines, functions and globals
//
///////////////////////////////////////////////////////////////////////////////

//#include	"dk_inv.h"	//	inventory functions


///////////////////////////////////////////////////////////////////////////////
//	dk_win.c
//
//	windows stuff for Daikatana
///////////////////////////////////////////////////////////////////////////////

//	defines
#define	DK_MAX_USERNAME	1024

//	globals
extern	char	dk_userName	[DK_MAX_USERNAME];
extern	int		dk_Initializing;

//	functions
void	dk_GetUserName (void);

void	dk_StartTimer (void);
void	dk_StopTimer (void);
void	dk_ShowRates (int maxx, int y);
void	dk_InitRates (int maxx, int y);

///////////////////////////////////////////////////////////////////////////////
//	dk_resource.c
//
//	for setting level resources, etc.
///////////////////////////////////////////////////////////////////////////////

//	defines
#define	DK_MAX_RESOURCE_PATH	1024

//	globals
extern	char	dk_resourcePath [DK_MAX_RESOURCE_PATH];
extern	char	dk_dllDir [DK_MAX_RESOURCE_PATH];

//	functions
void	dk_SetResourcePath (char *path);
void	dk_InitResourcePath (void);

///////////////////////////////////////////////////////////////////////////////
//	dk_log.c
//
//	for debugging
///////////////////////////////////////////////////////////////////////////////

void	log_open (void);
void	log_close (void);
void	log_printf (char *fmt, ...);

///////////////////////////////////////////////////////////////////////////////
//	dk_print.c
//
//	fancy output anywhere you want it
///////////////////////////////////////////////////////////////////////////////

void	dk_print_init (void);
void	dk_printxy (int x, int y, char *fmt, ...);
void	dk_print_clear (void);
void	dk_printframe_xy (int x, int y, char *fmt, ...);
void	dk_printframe_clear (void);
void	dk_print_draw (void);
void	dk_print_spinner (void);

